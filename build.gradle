buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:8.1.0' // https://plugins.gradle.org/plugin/nebula.ospackage
        classpath 'edu.sc.seis.gradle:launch4j:2.4.6' // https://plugins.gradle.org/plugin/edu.sc.seis.launch4j
    }
}

apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'edu.sc.seis.launch4j'
apply plugin: 'nebula.ospackage'

// Common Configuration //
rootProject.version='1.4.0'
targetCompatibility='1.8'

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    tasks.withType(JavaCompile) {
        sourceCompatibility = targetCompatibility = '1.8'
        options.compilerArgs << '-Xlint:deprecation'
        options.compilerArgs << '-Xlint:unchecked'
        options.encoding = 'UTF-8'
    }

    repositories {
        jcenter()
    }

    configurations {
        provided
        compile.extendsFrom provided
    }
}

// 'cleanIdea' task extension //
cleanIdea.doFirst {
    delete project.name + '.iws'
    delete 'out'
    followSymLinks = true
}

subprojects.each { subproject ->
    evaluationDependsOn(subproject.path)
}

// All in one JAR file //
jar {
    // Add dependencies
    def deps = []

    subprojects.each { subproject ->
        from subproject.sourceSets.main.output.classesDirs
        from subproject.sourceSets.main.output.resourcesDir
        deps += subproject.configurations.runtime - subproject.configurations.provided
    }
    subprojects.each { subproject ->
        deps -= subproject.jar.archivePath
    }
    deps = deps.unique().collect { it.isDirectory() ? it : zipTree(it) }
    from deps

    manifest {
        attributes 'Main-Class': 'com.pennsim.PennSim',
            'SplashScreen-Image': 'src/main/resources/PennSimIcon.png',
            'PennSim-Version': project.version
    }

    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

// Java executable wrapper for Windows //
launch4j {
    createExe.dependsOn 'jar'

    version = textVersion = project.version
    fileDescription = productName = 'PennSim'
    errTitle 'PennSim Windows Wrapper'
    copyright 'Dan Adler (C) 2020'
    fileDescription = 'PennSim, 16 bit virtual computer'
    icon projectDir.path + '/src/main/resources/PennSimIcon.ico'
}

// Distributions for OSX and Windows //
distributions {
//    osx.contents {
//        into('PennSim.app/Contents') {
//            from('src/osx/resources') {
//                include 'Info.plist'
//                expand VERSION: project.version,
////                        JAR: file(proguard.outJarFiles[0]).name
//                        JAR: jar
//            }
//        }
//        into('PennSim.app/Contents/MacOS') {
//            from('src/osx/resources') {
//                include 'universalJavaApplicationStub.sh'
//                fileMode 0755
//            }
//        }
//        into('PennSim.app/Contents/Resources/Java') {
//            from jar
//        }
//        from 'LICENSE', 'README.md'
//    }
    windows.contents {
        from 'build/launch4j/pennsim.exe'
        from 'LICENSE', 'README.md'
    }

    installWindowsDist.dependsOn createExe
    windowsDistTar.dependsOn createExe
    windowsDistZip.dependsOn createExe

//    installOsxDist.dependsOn 'jar'
//    osxDistTar.dependsOn 'jar'
//    osxDistZip.dependsOn 'jar'
}

dependencies {
    compile 'com.fifesoft:rsyntaxtextarea:3.0.8'
    compile 'com.jtattoo:JTattoo:1.6.13'
}